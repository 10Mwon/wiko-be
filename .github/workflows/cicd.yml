name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create directories
        run: mkdir -p src/main/resources/

      - name: Set up application.properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: List build directory recursively
        run: ls -alR build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packaged-application
          path: build/libs/*.jar

      - name: List build/libs directory
        run: ls -al build/libs/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: packaged-application
          path: build/libs

      - name: Create remote temporary directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ${{ secrets.REMOTE_DIR }}

      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "build/libs/*.jar"
          target: ${{ secrets.REMOTE_DIR }}
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        env:
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "REMOTE_DIR is: '$REMOTE_DIR'"
            
            echo "Stopping any running Java application..."
            PID=$(pgrep -f "java -jar ${REMOTE_DIR}/wiko-0.0.1-SNAPSHOT.jar")

            if [ -n "$PID" ]; then
              echo "Found Java process with PID: $PID, killing..."
              kill -15 $PID
              sleep 5
              
              # 프로세스가 살아있는지 확인 후 강제 종료
              if ps -p $PID > /dev/null; then
                echo "Process still running, force killing..."
                kill -9 $PID
              fi
            else
              echo "No Java process found."
            fi

            echo "Starting the application..."
            nohup java -jar ${REMOTE_DIR}/wiko-0.0.1-SNAPSHOT.jar > nohup.out 2>&1 &
            echo "Deployment complete."
